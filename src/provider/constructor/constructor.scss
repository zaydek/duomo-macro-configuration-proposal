@use "sass:list";
@use "sass:map";

@use "../helpers" as *;
// @use "../mixins" as *;

// @forward "../mixins";

// // FIXME: See NOTE before `constructor`.
// @mixin FIXME-responsive {
// 	@each $key, $n in breakpoints() {
// 		@media (min-width: px($n)) {
// 			.#{$key} {
// 				@at-root {
// 					@content;
// 				}
// 			}
// 		}
// 	}
// }

@function to-list($opts) {
	// prettier-ignore
	$ret: if(
		type-of($opts) == "map",
		($opts,),
		$opts,
	);
	@return $ret;
}

// Ex:
//
// (0, 0.5, 1)  -> true
// (0, 50, 100) -> false
//
@function percent-heuristic($range) {
	$ok: $range and type-of(list.nth($range, 1)) == "number" and list.nth($range, 1) >= 0 and
		type-of(list.nth($range, -1)) == "number" and list.nth($range, -1) <= 1;
	@return $ok;
}

// TODO: Can change API to support `@content`.
@mixin constructor($opts) {
	@each $opt in to-list($opts) {
		// prettier-ignore
		$shorthand: if(
			map.get($opt, shorthand) == none,
			map.get($opt, property),
			map.get($opt, shorthand),
		);
		$property: map.get($opt, property);
		$range: map.get($opt, range);
		$resolver: map.get($opt, resolver);
		$breakpoints: map.get($opt, breakpoints);
		$variants: map.get($opt, variants);

		// Computed:
		$percent: percent-heuristic($range);

		@if $range {
			@each $rv in $range {
				.#{n($rv)}#{$shorthand}-#{code-name(abs(if($percent, $rv * 100, $rv)))} {
					@each $prop in $property {
						#{$prop}: resolve($rv, $resolver);
					}
				}
			}
			// (hover)
			@if list.index($variants, hover) {
				@each $rv in $range {
					.group-hover:hover .#{n($rv)}#{$shorthand}-#{code-name(abs(if($percent, $rv * 100, $rv)))} {
						@each $prop in $property {
							#{$prop}: resolve($rv, $resolver);
						}
					}
				}
				@each $rv in $range {
					.hover#{delimiter()}#{n($rv)}#{$shorthand}-#{code-name(abs(if($percent, $rv * 100, $rv)))}:hover {
						@each $prop in $property {
							#{$prop}: resolve($rv, $resolver);
						}
					}
				}
			}
			// (focus)
			@if list.index($variants, focus) {
				@each $rv in $range {
					.group-focus:focus .#{n($rv)}#{$shorthand}-#{code-name(abs(if($percent, $rv * 100, $rv)))} {
						@each $prop in $property {
							#{$prop}: resolve($rv, $resolver);
						}
					}
				}
				@each $rv in $range {
					.focus#{delimiter()}#{n($rv)}#{$shorthand}-#{code-name(abs(if($percent, $rv * 100, $rv)))}:focus {
						@each $prop in $property {
							#{$prop}: resolve($rv, $resolver);
						}
					}
				}
			}
			// // (responsive)
			// @include responsive {
			// 	@each $rv in $range {
			// 		&#{delimiter()}#{n($rv)}#{$shorthand}-#{code-name(abs(if($percent, $rv * 100, $rv)))} {
			// 			@each $prop in $property {
			// 				#{$prop}: resolve($rv, $resolver);
			// 			}
			// 		}
			// 	}
			// }
		}
	}
}
