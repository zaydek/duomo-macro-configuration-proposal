@use "sass:list";
@use "sass:map";

@use "../helpers" as *;
@use "mixins" as *;

@mixin map-constructor($map-opt) {
	// prettier-ignore
	$shorthand: if(
		map.get($map-opt, shorthand) == none,
		"",                                 // Defer to ""
		map.get($map-opt, shorthand) + "-", // Defer to $shorthand + "-"
	);
	$property: map.get($map-opt, property);
	$map: map.get($map-opt, map);
	$resolver: map.get($map-opt, resolver);
	$breakpoints: map.get($map-opt, breakpoints);
	$variants: map.get($map-opt, variants);

	// .a { ... }
	@each $mk, $mv in $map {
		.#{$shorthand}#{$mk} {
			@each $prop in $property {
				#{$prop}: resolve($mv, $resolver);
			}
		}
	}
	// .hover\:a:hover { ... }
	// .group-hover:hover .a { ... }
	@if list.index($variants, hover) {
		@each $mk, $mv in $map {
			.#{$shorthand}#{$mk} {
				@include hover {
					@each $prop in $property {
						#{$prop}: resolve($mv, $resolver);
					}
				}
			}
		}
		@each $mk, $mv in $map {
			.#{$shorthand}#{$mk} {
				@include group-hover {
					@each $prop in $property {
						#{$prop}: resolve($mv, $resolver);
					}
				}
			}
		}
	}
	// .focus\:a:focus { ... }
	// .group-focus:focus .a { ... }
	@if list.index($variants, focus) {
		@each $mk, $mv in $map {
			.#{$shorthand}#{$mk} {
				@include focus {
					@each $prop in $property {
						#{$prop}: resolve($mv, $resolver);
					}
				}
			}
		}
		@each $mk, $mv in $map {
			.#{$shorthand}#{$mk} {
				@include group-focus {
					@each $prop in $property {
						#{$prop}: resolve($mv, $resolver);
					}
				}
			}
		}
	}
	// @media (min-width: ...) { .sm\:a { ... } }
	@if list.index($variants, responsive) {
		@include responsive {
			@each $mk, $mv in $map {
				&#{$shorthand}#{$mk} {
					@each $prop in $property {
						#{$prop}: resolve($mv, $resolver);
					}
				}
			}
		}
	}
}
