@use "sass:map";
@use "sass:math";

@use "configuration";
@use "escapers";
@use "getters";
@use "resolvers";

@use "core/width";

@function n($rv) {
	@return if($rv < 0, "-", "");
}

@function amp() {
	@if not & {
		@return ".";
	}
	@return & + getters.delimiter();
}

@mixin build($options) {
	$shorthand: map.get($options, shorthand);
	$property: map.get($options, property);
	$type: map.get($options, type);
	$range: map.get($options, range);
	$resolver: map.get($options, resolver);
	$breakpoints: map.get($options, breakpoints);
	$pseudos: map.get($options, pseudos);

	@if $type == range {
		@each $rv in $range {
			#{amp()}#{n($rv)}#{$shorthand}-#{getters.name(math.abs($rv))} {
				#{$property}: resolvers.resolve($rv, $resolver);
			}
		}
	}
}

@at-root {
	@if configuration.$headless == false {
		@include build(width.$options);
		@each $key, $n in getters.breakpoints() {
			@media (min-width: resolvers.px($n)) {
				.#{$key} {
					@at-root {
						@include build(width.$options);
					}
				}
			}
		}
	}
}
